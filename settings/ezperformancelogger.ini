
[GeneralSettings]

# Variables to track. Array index is important for piwik/ga logging only
# Currently supported: mem_usage, execution_time, db_queries - using the std eZPerfLogger class -
# or custom user-added variables
# Note: apache can log execution time by itself with the token %D
# rounded to 1000 bytes:
TrackVariables[1]=mem_usage
# rounded to 1msec:
TrackVariables[2]=execution_time
TrackVariables[3]=db_queries

# A list of php classes used to provide more performance variables.
# At the end of every page execution, the measure() method will be invoked on these
# classes, to allow them to set proper measured data to custom variables defined above
# (by calling eZPerfLogger::recordValue() - note that you do can also call that
# method from any other place in the application if needed)
VariableProviders[]
VariableProviders[]=eZPerfLogger

# How do we log performance variables:
LogMethods[]
# adding info for apache to put in his own log - needs some specific apache customlog format to work
###LogMethods[]=apache
# by setting custom variables for common analytics engines:
# piwik: to make this work, you need a piwik js tag in your templates, including the "piwikTracker.trackPageView();" line
LogMethods[]=piwik
# ga: to make this work, you need an async ga tag in your templates, including the "_gaq.push(['_trackPageview']);" line
LogMethods[]=googleanalytics
# by logging directly to a custom log file - NB: more expensive than letting Apache do it
# (uses same log format as Apache "extended" one)
LogMethods[]=logfile
# by inserting data directly in a custom table in the eZ database - be wary of its size!
#LogMethods[]=database
# by logging directly to a csv-formatted file instead of a file formatted like an Apache access log
#LogMethods[]=csv

# The name of the log file, for example mytest.log
# NB: this is used only by logging method "logfile" above. When logging method "apache"
# is used you should properly configure logfile.ini
PerfLogFileName=var/log/ezperflog.log


[ParsingSettings]

# A list of regexps, used to find urls not to match when parsing the access log
ExcludeUrls[]
ExcludeUrls[]=/\.(css|gif|ico|js|jpe?g|png)$/

# The php class which will be used to store the perf data (typically in a db):
# when the updateperfstats cronjob is run, it parses the access log, extracts
# data and passes it to this class to storing elsewhere
# supported: eZPerfLoggerDBStorage, eZPerfLoggerCSVStorage
# NB: when the logmethod "database" is used (see parameter above), perf data
# is stored directly to the db just as if eZPerfLoggerDBStorage was used here.
# In fact, in that case you should not run the cronjob, as you will get double
# statistics
StorageClass=eZPerfLoggerCSVStorage


# The following settings apply when StorageClass=eZPerfLoggerCSVStorage
[csvSettings]
FileName=var/log/ezperflog.csv
# separator char for csv
Separator=;
# quotes around url field. Can be left empty
Quotes=

# Besides logging data, we can enable xhprof to get complete profiling info
# NB: needs the xhprof PECL extension to work
[XHProfSettings]
# when this is enabled, and any code starts an xhprof session, an html comment is
# added to the bottom of the page with the profiling session ids. This is used to
# show a link in the debug output panel to view the profiling data
AppendXHProfTag=enabled
# Location of the dot command from graphviz (full path), if not in the system PATH
DotCommand=dot
